# Docker Compose for Development

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: respicare-mongodb-dev
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-password123}
      MONGO_INITDB_DATABASE: ${MONGO_DB:-respicare_dev}
    volumes:
      - mongodb_dev_data:/data/db
      - ./mongodb/init:/docker-entrypoint-initdb.d
    networks:
      - respicare-dev-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: respicare-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - respicare-dev-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # AI Services
  ai-services:
    build:
      context: ./ai-services
      dockerfile: dockerfile
    container_name: respicare-ai-dev
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      PYTHONPATH: /app
      PYTHONUNBUFFERED: 1
      DATABASE_URL: mongodb://${MONGO_USERNAME:-admin}:${MONGO_PASSWORD:-password123}@mongodb:27017/${MONGO_DB:-respicare_dev}?authSource=admin
      REDIS_URL: redis://redis:6379
      MODEL_PATH: /app/models
      LOG_LEVEL: ${LOG_LEVEL:-DEBUG}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    volumes:
      - ./ai-services:/app
      - ai_models_dev:/app/models
      - ai_cache_dev:/app/cache
      - ai_logs_dev:/app/logs
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - respicare-dev-network
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload --log-level debug

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: dockerfile.dev
    container_name: respicare-backend-dev
    restart: unless-stopped
    ports:
      - "3001:3001"
      - "9229:9229"  # Node.js debugger
    environment:
      NODE_ENV: development
      PORT: 3001
      MONGODB_URI: mongodb://${MONGO_USERNAME:-admin}:${MONGO_PASSWORD:-password123}@mongodb:27017/${MONGO_DB:-respicare_dev}?authSource=admin
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-dev-secret-key-change-in-production}
      AI_SERVICE_URL: http://ai-services:8000
      LOG_LEVEL: ${LOG_LEVEL:-debug}
    volumes:
      - ./backend:/app
      - /app/node_modules
      - backend_logs_dev:/app/logs
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
      ai-services:
        condition: service_started
    networks:
      - respicare-dev-network
    command: npm run dev

  # MongoDB Admin Interface
  mongo-express:
    image: mongo-express:latest
    container_name: respicare-mongo-express-dev
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USERNAME:-admin}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD:-password123}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_USERNAME:-admin}:${MONGO_PASSWORD:-password123}@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: ${ME_USERNAME:-admin}
      ME_CONFIG_BASICAUTH_PASSWORD: ${ME_PASSWORD:-admin123}
    depends_on:
      - mongodb
    networks:
      - respicare-dev-network

  # Redis Commander
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: respicare-redis-commander-dev
    restart: unless-stopped
    ports:
      - "8082:8081"
    environment:
      REDIS_HOSTS: local:redis:6379
    depends_on:
      - redis
    networks:
      - respicare-dev-network

volumes:
  mongodb_dev_data:
    driver: local
  redis_dev_data:
    driver: local
  ai_models_dev:
    driver: local
  ai_cache_dev:
    driver: local
  ai_logs_dev:
    driver: local
  backend_logs_dev:
    driver: local

networks:
  respicare-dev-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

